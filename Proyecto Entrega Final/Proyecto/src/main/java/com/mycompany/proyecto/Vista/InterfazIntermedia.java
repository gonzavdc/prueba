/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto.Vista;
import com.mycompany.proyecto.*;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
/**
 *
 * @author sebas
 */
public class InterfazIntermedia extends javax.swing.JFrame {

    /**
     * Creates new form InterfazIntermedia
     */
    public InterfazIntermedia() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("Comandos");

        jMenuItem1.setText("Crear Población");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Mostrar Población");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Crear Empresa");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Mostrar Empresa");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Buscar una casa");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setText("Eliminar el contenedor de una casa");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem8.setText("Buscar casa con menos agua disponible");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuItem9.setText("Casas con una baja capacidad máxima de agua");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem9);

        jMenuItem10.setText("Guardar Dato empresa en CSV");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem10);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Salir");

        jMenuItem7.setText("Cerrar Programa");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        Casa objetoCasa = new Casa();

        Poblacion    poblacion = objetoCasa.armarPoblacion();

        poblacion.verPoblacion(poblacion.getCasas());
        try{
        File archivo = new File("texto2.txt");

        FileWriter escritura = new FileWriter(archivo);

        PrintWriter escritura2 = new PrintWriter(escritura);

        escritura2.println("Cantidad de casas :" + poblacion.getCantCasas());
        escritura2.println("Casas:");
        for(int i = 0 ;i<poblacion.getCasas().size();i++)
        {
            escritura2.println("Casa N° " + (i+1));
            escritura2.println("Cantidad de habitantes en casa : " + poblacion.getCasas().get(i).getCantHabitantes());
            escritura2.println("Direccion :  " + poblacion.getCasas().get(i).getDireccion());
            escritura2.println("Contacto : " + poblacion.getCasas().get(i).getContacto());

        }
        escritura2.close();
        }catch (IOException e)
        {

        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        Contenedor contenedorEmpresa = new Contenedor();
        Empresa empresa = new Empresa(contenedorEmpresa);
        empresa.crearContenedores();

        contenedorEmpresa.verContenedor();
        empresa.verEmpresa();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
 
        this.setVisible(false);
        
        
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        Poblacion poblacion;
        Casa objetoCasa = new Casa();

        poblacion = objetoCasa.armarPoblacion();
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        Contenedor contenedorEmpresa = new Contenedor();

                        Empresa empresa = new Empresa(contenedorEmpresa); //Pide un contenedor más
                        empresa.setColeccionContenedor(empresa.crearContenedores());
                        try{
                        File archivo = new File("texto1.txt");

                        FileWriter escritura = new FileWriter(archivo);

                        PrintWriter escritura2 = new PrintWriter(escritura);

                        escritura2.println("Nombre Empresa :" + empresa.getNombre()+ "Cantidad Contenedores disponibles : "+empresa.getContenedoresDisponibles());
                        escritura2.println("Contenedores de la empresa :");
                        for(int i = 0 ;i<empresa.getColeccionContenedor().size();i++)
                        {
                            escritura2.println("Contenedor N° " + (i+1));
                            escritura2.println("Capacidad Maxima : " + empresa.getColeccionContenedor().get(i).getCapacidadContenedor());
                            escritura2.println("Agua Restante :  " + empresa.getColeccionContenedor().get(i).getAguaRestante());
                            escritura2.println("Limite bajo nivel : " + empresa.getColeccionContenedor().get(i).getLimiteBajoNivel());

                        }
                        escritura2.close();
                        }catch (IOException e)
                        {

                        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        int contacto;
                        String direccion;
                        
        Poblacion poblacion = new Poblacion();
        Casa objetoCasa = new Casa();
        Validacion validar = new Validacion();
        System.out.println("Ingrese direccion de la casa");
        direccion = validar.validarCadena();
        while(direccion == null)
        {
            System.out.println("Ingrese direccion de la casa");
            direccion = validar.validarCadena();
        }
        System.out.println("Ingrese contacto de la casa");

        contacto = validar.validarEntero();
        while(contacto < 1)
        {
            System.out.println("Ingrese contacto de la casa");

        contacto = validar.validarEntero();
        }
        poblacion = objetoCasa.armarPoblacion();

        poblacion.buscarCasa(contacto,direccion);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        Casa objetoCasa = new Casa();
        Validacion validar = new Validacion();
        System.out.println("Ingrese direccion de la casa");
        String direccion = validar.validarCadena();
        while(direccion == null)
        {
            System.out.println("Ingrese direccion de la casa");
            direccion = validar.validarCadena();
        }
        System.out.println("Ingrese contacto de la casa");

        int contacto = validar.validarEntero();
        while(contacto < 1)
        {
            System.out.println("Ingrese contacto de la casa");

        contacto = validar.validarEntero();
        }
        Poblacion poblacion = objetoCasa.armarPoblacion();

        poblacion.eliminarCasa(contacto,direccion);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        
        Poblacion poblacion = new Poblacion();

    //Función para buscar el contenedor con menor cantidad de agua disponible de todas las casas

        Casa casaMenosAguaDisp = new Casa(); //creo que la parte de new casa no es necesario, ya q se va cambiando
        double aguaAux = -1;

        for (int i= 0; i < poblacion.getCantCasas() ; i++){

            if (aguaAux == -1){
                casaMenosAguaDisp = poblacion.getCasas().get(i);
                aguaAux = poblacion.getCasas().get(i).getContenedorCasa().getCapacidadContenedor();
            }

            if ((poblacion.getCasas().get(i).getContenedorCasa().getCapacidadContenedor()) < aguaAux){
                casaMenosAguaDisp = poblacion.getCasas().get(i);
                aguaAux = poblacion.getCasas().get(i).getContenedorCasa().getCapacidadContenedor();

            }
        }
        System.out.println("Casa: Tiene :"+casaMenosAguaDisp.getCantHabitantes()+"Habitantes");
        System.out.println("Consumo máximo :"+casaMenosAguaDisp.getConsumoMaximo());
        System.out.println("Direccion :"+casaMenosAguaDisp.getDireccion());
        System.out.println("Contacto :"+casaMenosAguaDisp.getContacto());
    
        
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        Contenedor contenedorEmpresa = new Contenedor();

        Empresa empresa = new Empresa(contenedorEmpresa); //Pide un contenedor más
        empresa.setColeccionContenedor(empresa.crearContenedores());
        try{
            File archivo = new File("texto1.txt");

            FileWriter escritura = new FileWriter(archivo);

            PrintWriter escritura2 = new PrintWriter(escritura);

            escritura2.println("Nombre Empresa :" + empresa.getNombre()+ "Cantidad Contenedores disponibles : "+empresa.getContenedoresDisponibles());
            escritura2.println("Contenedores de la empresa :");
            for(int i = 0 ;i<empresa.getColeccionContenedor().size();i++)
            {
                escritura2.println("Contenedor N° " + (i+1));
                escritura2.println("Capacidad Maxima : " + empresa.getColeccionContenedor().get(i).getCapacidadContenedor());
                escritura2.println("Agua Restante :  " + empresa.getColeccionContenedor().get(i).getAguaRestante());
                escritura2.println("Limite bajo nivel : " + empresa.getColeccionContenedor().get(i).getLimiteBajoNivel());

            }
        escritura2.close();
        }catch (IOException e)
        {

        }
        int cantCasas = 1;
       
        ArrayList<Casa> ColeccionCasas = new ArrayList<>();
        ArrayList<Casa> coleccionCasasContenedorPequenyo = new ArrayList<>();
        Poblacion poblacion = new Poblacion(cantCasas,ColeccionCasas);
        Casa objetoCasa = new Casa();
        poblacion = objetoCasa.armarPoblacion();
        double capacidadContenedorMasPequenyo = 0;
        
        for (int i = 0; i < empresa.getColeccionContenedor().size();i++)
        {
            if (empresa.getColeccionContenedor().get(i).getCapacidadContenedor() < capacidadContenedorMasPequenyo || capacidadContenedorMasPequenyo == 0)
            {
                capacidadContenedorMasPequenyo = empresa.getColeccionContenedor().get(i).getCapacidadContenedor();
                
            }
        }
        
        for(int j = 0; j<poblacion.getCasas().size();j++)
        {
            if(poblacion.getCasas().get(j).getContenedorCasa().getCapacidadContenedor() < capacidadContenedorMasPequenyo)
            {
                coleccionCasasContenedorPequenyo.add(poblacion.getCasas().get(j));
            }
        }
        
        
        for(int k= 0; k < coleccionCasasContenedorPequenyo.size(); k++)
        {
            System.out.println("Contacto de las casas que tienen contenedores pequeños: ");
            System.out.println("Contacto : "+coleccionCasasContenedorPequenyo.get(k).getContacto());
        }
       
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        Contenedor contenedorEmpresa = new Contenedor();
        Empresa empresa = new Empresa(contenedorEmpresa);
        empresa.crearDatos(empresa.getNombre(),empresa.getColeccionContenedor());
        //SE GUARDA EN CSV
        
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazIntermedia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazIntermedia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazIntermedia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazIntermedia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazIntermedia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    // End of variables declaration//GEN-END:variables
}
